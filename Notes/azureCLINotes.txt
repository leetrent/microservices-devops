$ az --version

$ az acr login --name shoppingacr
Login Succeeded


# List Azure Locations
$ az account list-locations -o table

# Create Azure Resource Group
az group create -l centralus -n MyResourceGroup

# Create Azure Container Registry
$ az acr create --resource-group myResourceGroup --name shoppingacr --sku Basic

# Enable Admin User Account
$ az acr update -n shoppingacr --admin-enabled true

$ az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
AcrLoginServer
----------------------
shoppingacr.azurecr.io

$ docker tag shoppingapi:latest shoppingacr.azurecr.io/shoppingapi:v1
shoppingacr.azurecr.io/shoppingapi      v1                                                      d148712d49a1

$ docker tag shoppingclient:latest shoppingacr.azurecr.io/shoppingclient:v1
shoppingacr.azurecr.io/shoppingclient   v1                                                      ec7b18504827

$ docker push shoppingacr.azurecr.io/shoppingapi:v1
v1: digest: sha256:a405c5680d2f6f03ecbaa7014d3962b66b88b5fe1435486fe81d0fc09e0ebe5e size: 1995

$ docker push shoppingacr.azurecr.io/shoppingclient:v1
v1: digest: sha256:7db3dc8bdcfc412b423ecf04e8031f8bf58ed89b1f85a2d1d0d1e60707cf554c size: 1995

$ az acr repository list --name shoppingacr --output table
Result
--------------
shoppingapi
shoppingclient

$ az acr repository show-tags --name shoppingacr --repository shoppingclient --output table
Result
--------
v1

$ az aks create --resource-group myResourceGroup --name myAKSCluster --node-count 1 --generate-ssh-keys --attach-acr shoppingacr
SSH key files 'C:\Users\Lee\.ssh\id_rsa' and 'C:\Users\Lee\.ssh\id_rsa.pub' have been generated under ~/.ssh to allow SSH access to the VM. If using machines without permanent storage like Azure Cloud Shell without an attached file share, back up your keys to a safe location

$ az aks install-cli
Downloading client to "C:\Users\Lee\.azure-kubectl\kubectl.exe" from "https://storage.googleapis.com/kubernetes-release/release/v1.21.1/bin/windows/amd64/kubectl.exe"
Please add "C:\Users\Lee\.azure-kubectl" to your search PATH so the `kubectl.exe` can be found. 2 options:
    1. Run "set PATH=%PATH%;C:\Users\Lee\.azure-kubectl" or "$env:path += 'C:\Users\Lee\.azure-kubectl'" for PowerShell. This is good for the current command session.
    2. Update system PATH environment variable by following "Control Panel->System->Advanced->Environment Variables", and re-open the command window. You only need to do it once
Downloading client to "C:\Users\Public\Documents\Wondershare\CreatorTemp\tmp_o51sc4c\kubelogin.zip" from "https://github.com/Azure/kubelogin/releases/download/v0.0.9/kubelogin.zip"
Please add "C:\Users\Lee\.azure-kubelogin" to your search PATH so the `kubelogin.exe` can be found. 2 options:
    1. Run "set PATH=%PATH%;C:\Users\Lee\.azure-kubelogin" or "$env:path += 'C:\Users\Lee\.azure-kubelogin'" for PowerShell. This is good for the current command session.
    2. Update system PATH environment variable by following "Control Panel->System->Advanced->Environment Variables", and re-open the command window. You only need to do it once

$ az aks get-credentials --resource-group myResourceGroup --name myAKSCluster
Merged "myAKSCluster" as current context in C:\Users\Lee\.kube\config

$ k get all
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
service/kubernetes   ClusterIP   10.0.0.1     <none>        443/TCP   23h

$ k get nodes
NAME                                STATUS   ROLES   AGE   VERSION
aks-nodepool1-28779011-vmss000000   Ready    agent   23h   v1.19.9

$ az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table
AcrLoginServer
----------------------
shoppingacr.azurecr.io

$ az acr repository list --name shoppingacr --output table
Result
--------------
shoppingapi
shoppingclient

$ k create secret docker-registry acr-secret \ --docker-server=<my-docker-server> \ --docker-username=<my-docker-username> \ --docker-password=<my-docker-password> \ --docker-email=<my-docker-email>


$  k create secret docker-registry acr-secret \
> --docker-server=<my-docker-server> \
> --docker-username=<my-docker-username> \
> --docker-password=<my-docker-password> \
> --docker-email=my-docker-email
secret/acr-secret created

$ k get secret





